---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: react-socket-deployment
spec:
  selector:
    matchLabels:
      app: react-socket
  replicas: 1
  template:
    metadata:
      labels:
        app: react-socket
    spec:
      containers:
        - name: react-socket
          image: us.icr.io/nvoeztjvpdqabiegedjzfvfdqcdccm/react-socket:latest
          imagePullPolicy: Always
          ports:
              - containerPort: 80
      restartPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  name: react-socket-service
spec:
  type: ClusterIP
  ports:
  - port: 80
    targetPort: 80
    protocol: TCP
  selector:
    app: react-socket
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: react-socket-ingress
  annotations:
    kubernetes.io/ingress.class: "public-iks-k8s-nginx"
spec:
  tls:
  - hosts:
    -  monassureur.myclusterdallas-b62a04919b5efa1e15a70ec5a3351fc4-0000.us-south.containers.appdomain.cloud 
    secretName: myclusterdallas-b62a04919b5efa1e15a70ec5a3351fc4-0000  
  rules:
  - host: monassureur.myclusterdallas-b62a04919b5efa1e15a70ec5a3351fc4-0000.us-south.containers.appdomain.cloud 
    http:
      paths:
      - path: /
        backend:
          serviceName: react-socket-service
          servicePort: 80
